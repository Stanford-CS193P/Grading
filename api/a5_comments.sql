INSERT INTO comments (position, isPublic, assignment, commentType, commentText) VALUES (1,  1, 5, 'REQUIRED_TASK', '1. Download the data at the URL provided by the FlickrFetcher class method URLforTopPlaces to get an array of the most popular Flickr photo spots in the last day or so.');
INSERT INTO comments (position, isPublic, assignment, commentType, commentText) VALUES (2,  1, 5, 'REQUIRED_TASK', '2. Create a UITabBarController-based user-interface with two tabs.');
INSERT INTO comments (position, isPublic, assignment, commentType, commentText) VALUES (3,  1, 5, 'REQUIRED_TASK', '2. The first tab shows a UITableView listing the places obtained above divided into sections by country and then alphabetical within each section.');
INSERT INTO comments (position, isPublic, assignment, commentType, commentText) VALUES (4,  1, 5, 'REQUIRED_TASK', '2. The second tab shows a UITableView with a list of the 20 most recently viewed (in your application) photos.');
INSERT INTO comments (position, isPublic, assignment, commentType, commentText) VALUES (5,  1, 5, 'REQUIRED_TASK', '2. Photos on the second tab should be in chronological order with the most-recently-viewed first.');
INSERT INTO comments (position, isPublic, assignment, commentType, commentText) VALUES (6,  1, 5, 'REQUIRED_TASK', '2. Photos on the second tab should have no duplicates.');
INSERT INTO comments (position, isPublic, assignment, commentType, commentText) VALUES (7,  1, 5, 'REQUIRED_TASK', "3. Anywhere a place appears in a table view in your application, the most detailed part of the location (e.g. the city name) should be the title of the table view's cell and the rest of the name of the location (e.g. state, province, etc.) should appear as the subtitle of the table view cell.");
INSERT INTO comments (position, isPublic, assignment, commentType, commentText) VALUES (8,  1, 5, 'REQUIRED_TASK', '3. The country will be in the section title.');
INSERT INTO comments (position, isPublic, assignment, commentType, commentText) VALUES (9,  1, 5, 'REQUIRED_TASK', "4. When the user chooses a place in a table view, you must query Flickr again to get an array of 50 photos from that place and display them in a list. The URL provided by FlickrFetcher's URLforPhotosInPlace:maxResults: method will get this from Flickr.");
INSERT INTO comments (position, isPublic, assignment, commentType, commentText) VALUES (10, 1, 5, 'REQUIRED_TASK', "5. Any list of photos should display the photo’s title as the table view cell's title and its description as the table view cell’s subtitle.");
INSERT INTO comments (position, isPublic, assignment, commentType, commentText) VALUES (11, 1, 5, 'REQUIRED_TASK', '5. If the photo has no title, use its description as the title.');
INSERT INTO comments (position, isPublic, assignment, commentType, commentText) VALUES (12, 1, 5, 'REQUIRED_TASK', '5. If it has no title or description, use "Unknown" as the title.');
INSERT INTO comments (position, isPublic, assignment, commentType, commentText) VALUES (13, 1, 5, 'REQUIRED_TASK', '6. When the user chooses a photo from any list, show it inside a scrolling view that allows the user to pan and zoom (a reasonable amount).');
INSERT INTO comments (position, isPublic, assignment, commentType, commentText) VALUES (14, 1, 5, 'REQUIRED_TASK', "7. Make sure the photo's title is somewhere on screen whenever you are showing a photo image to the user.");
INSERT INTO comments (position, isPublic, assignment, commentType, commentText) VALUES (15, 1, 5, 'REQUIRED_TASK', "8. Whenever a photo's image appears on screen, it should automatically zoom to show as much of the photo as possible with no extra, unused space.");
INSERT INTO comments (position, isPublic, assignment, commentType, commentText) VALUES (16, 1, 5, 'REQUIRED_TASK', '8. Once the user zooms in or out on a photo by pinching, though, you can stop auto-zooming that image.');
INSERT INTO comments (position, isPublic, assignment, commentType, commentText) VALUES (17, 1, 5, 'REQUIRED_TASK', '9. Your application’s main thread should never be blocked (e.g. Flickr fetches must happen in a different thread).');
INSERT INTO comments (position, isPublic, assignment, commentType, commentText) VALUES (18, 1, 5, 'REQUIRED_TASK', '9. If your application is waiting for something over the network, it should give feedback to the user that that is happening.');
INSERT INTO comments (position, isPublic, assignment, commentType, commentText) VALUES (19, 1, 5, 'REQUIRED_TASK', "10. Your application must work in both portrait and landscape orientations on both the iPhone and the iPad. Use appropriate platform-specific UI idioms (e.g. don't let your iPad version look like a gigantic iPhone screen).");
INSERT INTO comments (position, isPublic, assignment, commentType, commentText) VALUES (20, 1, 5, 'REQUIRED_TASK', '11. The list of recent photos should be saved in NSUserDefaults (i.e. it should be persistent across launchings of your application).');
INSERT INTO comments (position, isPublic, assignment, commentType, commentText) VALUES (21, 1, 5, 'EVALUATION', 'Project does not build.');
INSERT INTO comments (position, isPublic, assignment, commentType, commentText) VALUES (22, 1, 5, 'EVALUATION', 'Project does not build without warnings.');
INSERT INTO comments (position, isPublic, assignment, commentType, commentText) VALUES (23, 1, 5, 'EVALUATION', 'A fundamental concept was not understood.');
INSERT INTO comments (position, isPublic, assignment, commentType, commentText) VALUES (24, 1, 5, 'EVALUATION', 'Code is sloppy and hard to read (e.g. indentation is not consistent, etc.).');
INSERT INTO comments (position, isPublic, assignment, commentType, commentText) VALUES (25, 1, 5, 'EVALUATION', 'Your solution is difficult (or impossible) for someone reading the code to understand due to lack of comments, poor variable/method names, poor solution structure, etc.');
INSERT INTO comments (position, isPublic, assignment, commentType, commentText) VALUES (26, 1, 5, 'EVALUATION', 'UI is a mess. Things should be lined up and appropriately spaced to “look nice.” Xcode gives you those dashed blue guidelines so there should be no excuse for things not being lined up, etc. Get in the habit of building aesthetically balanced UIs from the start of this course.');
INSERT INTO comments (position, isPublic, assignment, commentType, commentText) VALUES (27, 1, 5, 'EVALUATION', 'Incorrect or poor use of object-oriented design principles. For example, code should not be duplicated if it can be reused via inheritance or other object- oriented design methodologies.');
INSERT INTO comments (position, isPublic, assignment, commentType, commentText) VALUES (28, 1, 5, 'EXTRA_CREDIT', '1. Add some UI which tracks the “most interesting” photos.');
INSERT INTO comments (position, isPublic, assignment, commentType, commentText) VALUES (29, 1, 5, 'EXTRA_CREDIT', '2. Another way to let the user organize the photos is by allowing him or her to mark a photo as a “favorite” and then providing UI to integrate that favoritism into the UI in some way.');
INSERT INTO comments (position, isPublic, assignment, commentType, commentText) VALUES (30, 1, 5, 'EXTRA_CREDIT', '3. Let the user rotate a photo using a rotation gesture.');
INSERT INTO comments (position, isPublic, assignment, commentType, commentText) VALUES (31, 1, 5, 'EXTRA_CREDIT', '4. Save and restore the zooming (and rotation if you do that) the user applies to a given photo. Maybe the scroll position as well.');
INSERT INTO comments (position, isPublic, assignment, commentType, commentText) VALUES (32, 1, 5, 'EXTRA_CREDIT', '5. It might not make to store zoom/rotate information for every photo the user ever interacts with over the entire lifetime of the application’s existence on their device (that could be a lot of photos!), so make some decisions about what info you’ll save and perhaps document why in your code.');
INSERT INTO comments (position, isPublic, assignment, commentType, commentText) VALUES (33, 1, 5, 'EXTRA_CREDIT', '6. TheCoreImageframework(classesthatstartwithCI)providessomereallypowerful, yet easy-to-use API for filtering images (e.g. blurring or “sepia-ing” them). Add some of these filters to your UI.');
