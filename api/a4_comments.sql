INSERT INTO comments (isPublic, position, assignment, commentType, commentText) VALUES (1,  1, 4, 'REQUIRED_TASK', '1. Your application this week is still required to play both the Set and Playing Card matching games (in separate tabs) and must show the score and allow re-deals, but you can remove the UI for showing the result of the last card choice as well as the History MVC added last week.');
INSERT INTO comments (isPublic, position, assignment, commentType, commentText) VALUES (1,  2, 4, 'REQUIRED_TASK', '2. Cards must have a "standard" look and feel (i.e. for Set, 1, 2 or 3 squiggles, diamonds or ovals that are solid, striped or unfilled, and are either green, red or purple; for Playing Cards, pips and faces). You must draw these using UIBezierPath and Core Graphics functions. You may not use images or attributed strings for Set cards.');
INSERT INTO comments (isPublic, position, assignment, commentType, commentText) VALUES (1,  3, 4, 'REQUIRED_TASK', '2. The drawings on the card must scale appropriately to the card’s bounds.');
INSERT INTO comments (isPublic, position, assignment, commentType, commentText) VALUES (1,  4, 4, 'REQUIRED_TASK', '2. You can use the PlayingCardView from the in-class demo to draw your Playing Card game cards, but red suits must show up as red (not black).');
INSERT INTO comments (isPublic, position, assignment, commentType, commentText) VALUES (1,  5, 4, 'REQUIRED_TASK', '3. When a Set match is successfully chosen, the matching cards should now be removed from the game (not just blanked out or grayed out, but removed from the UI entirely).');
INSERT INTO comments (isPublic, position, assignment, commentType, commentText) VALUES (1,  6, 4, 'REQUIRED_TASK', '4. As in a real game of Set, the user should start with 12 cards and then have the option of requesting 3 more cards to be dealt at any time if he or she is unable to locate a Set.');
INSERT INTO comments (isPublic, position, assignment, commentType, commentText) VALUES (1,  7, 4, 'REQUIRED_TASK', '4. Do something sensible when there are no more cards in the deck.');
INSERT INTO comments (isPublic, position, assignment, commentType, commentText) VALUES (1,  8, 4, 'REQUIRED_TASK', '5. Use a flip transition to animate choosing cards in the Playing Card game (so that the cards look like they are being flipped over when chosen).');
INSERT INTO comments (isPublic, position, assignment, commentType, commentText) VALUES (1,  9, 4, 'REQUIRED_TASK', '6. The arrival and departure of cards must be animated.');
INSERT INTO comments (isPublic, position, assignment, commentType, commentText) VALUES (1, 10, 4, 'REQUIRED_TASK', '6. As cards come and go, you must automatically adjust the layout of the cards in your user-interface (i.e. their size and position) to efficiently use the real estate on screen (i.e. don’t waste space) and make them all fit.');
INSERT INTO comments (isPublic, position, assignment, commentType, commentText) VALUES (1, 11, 4, 'REQUIRED_TASK', '7. Animate re-deals.');
INSERT INTO comments (isPublic, position, assignment, commentType, commentText) VALUES (1, 12, 4, 'REQUIRED_TASK', '8. The game must work properly (and look good) in both Landscape and Portrait orientations on both the iPhone 4 and the iPhone 5. Use Autolayout as much as possible to make this work. Positioning the cards themselves may require some additional work. None of your code should be specific to any given screen width or height or orientation (i.e. no “if landscape then” or “if width/height ... then” code).');
INSERT INTO comments (isPublic, position, assignment, commentType, commentText) VALUES (1, 13, 4, 'REQUIRED_TASK', '9. The movement of the elements inside your UI that occur in response to device rotation must be animated (Autolayout already animates any changes it makes for you, but any other layout changes that you do in code must be animated by you).');
INSERT INTO comments (isPublic, position, assignment, commentType, commentText) VALUES (1, 14, 4, 'REQUIRED_TASK', '10. Use a UIDynamicAnimator to allow the cards in either game to be gathered up into a pile via a pinch gesture.');
INSERT INTO comments (isPublic, position, assignment, commentType, commentText) VALUES (1, 15, 4, 'REQUIRED_TASK', '10. Once gathered, the stack of gathered cards must be able to be moved around (via a pan gesture).');
INSERT INTO comments (isPublic, position, assignment, commentType, commentText) VALUES (1, 16, 4, 'REQUIRED_TASK', '10. Tapping on the stack will return the cards to their normal positions (animated, of course) unharmed. ');
INSERT INTO comments (isPublic, position, assignment, commentType, commentText) VALUES (1, 17, 4, 'EVALUATION', 'Project does not build. ');
INSERT INTO comments (isPublic, position, assignment, commentType, commentText) VALUES (1, 18, 4, 'EVALUATION', 'Project does not build without warnings. ');
INSERT INTO comments (isPublic, position, assignment, commentType, commentText) VALUES (1, 19, 4, 'EVALUATION', 'A fundamental concept was not understood. ');
INSERT INTO comments (isPublic, position, assignment, commentType, commentText) VALUES (1, 20, 4, 'EVALUATION', ' Code is sloppy and hard to read (e.g. indentation is not consistent, etc.).');
INSERT INTO comments (isPublic, position, assignment, commentType, commentText) VALUES (1, 21, 4, 'EVALUATION', 'Your solution is difficult (or impossible) for someone reading the code to understand due to lack of comments, poor variable/method names, poor solution structure, etc.');
INSERT INTO comments (isPublic, position, assignment, commentType, commentText) VALUES (1, 22, 4, 'EVALUATION', 'UI is a mess. Things should be lined up and appropriately spaced to “look nice.” Xcode gives you those dashed blue guidelines so there should be no excuse for things not being lined up, etc. Get in the habit of building aesthetically balanced UIs from the start of this course. ');
INSERT INTO comments (isPublic, position, assignment, commentType, commentText) VALUES (1, 23, 4, 'EVALUATION', 'Incorrect or poor use of object-oriented design principles. For example, code should not be duplicated if it can be reused via inheritance or other object- oriented design methodologies. ');
INSERT INTO comments (isPublic, position, assignment, commentType, commentText) VALUES (1, 24, 4, 'EVALUATION', 'Animation is abrupt or otherwise not pleasing to the eye. Animation’s purpose is to provide visual appeal and communicate change to the user. It should not be a distraction, but rather an integral part of the aesthetic design of your application. ');
INSERT INTO comments (isPublic, position, assignment, commentType, commentText) VALUES (1, 25, 4, 'EXTRA_CREDIT', '1. You could add better score-keeping to the Set part of this application if you can figure out an algorithm for calculating whether a Set exists in the current cards in play. Then you can penalize the user not only for mismatches, but for clicking the “deal 3 more cards” button if he or she missed a Set. You’d also know when the game was “over” (because the user would click on “deal 3 more cards” and there would be no more cards in the deck and no more Sets to choose). ');
INSERT INTO comments (isPublic, position, assignment, commentType, commentText) VALUES (1, 26, 4, 'EXTRA_CREDIT', ' 2. Knowing how to find Sets in the remaining cards also would allow you to let the user cheat. Have a button that will show them a Set (if available). It’s up to you how you want to show it, but maybe some little indicator (a star or something) on each of the 3 cards?');
INSERT INTO comments (isPublic, position, assignment, commentType, commentText) VALUES (1, 27, 4, 'EXTRA_CREDIT', ' 3. Make the Set game a two player game. There’s no need to go overboard here. Think of a simple UI and a straightforward implementation that make sense.');
INSERT INTO comments (isPublic, position, assignment, commentType, commentText) VALUES (1, 28, 4, 'EXTRA_CREDIT', ' 4. Think of some other way(s) to use animation in your application and implement it.');