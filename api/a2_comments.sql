INSERT INTO comments (isPublic, position, assignment, commentType, commentText) VALUES (1, 1, 2, 'REQUIRED_TASK', '1. Follow the detailed instructions in the lecture slides (separate document) to reproduce the latest version of Matchismo we built in lecture (i.e. the one with multiple cards) and run it in the iPhone Simulator. Do not proceed to the next steps unless your card matching game functions as expected and builds without warnings or errors.');
INSERT INTO comments (isPublic, position, assignment, commentType, commentText) VALUES (1, 2, 2, 'REQUIRED_TASK', '2. Add a button which will re-deal all of the cards (i.e. start a new game). It should reset the score (and anything else in the UI that makes sense). In a real game, we’d probably want to ask the user if he or she is “sure” before aborting the game in process to re-deal, but for this assignment, you can assume the user always knows what he or she is doing when they hit this button.');
INSERT INTO comments (isPublic, position, assignment, commentType, commentText) VALUES (1, 3, 2, 'REQUIRED_TASK', '3. Drag out a switch (UISwitch) or a segmented control (UISegmentedControl) into your View somewhere which controls whether the game matches two cards at a time or three cards at a time (i.e. it sets “2-card-match mode” vs. “3-card-match mode”).');
INSERT INTO comments (isPublic, position, assignment, commentType, commentText) VALUES (1, 4, 2, 'REQUIRED_TASK', '3. Give the user appropriate points depending on how difficult the match is to accomplish.');
INSERT INTO comments (isPublic, position, assignment, commentType, commentText) VALUES (1, 5, 2, 'REQUIRED_TASK', '3. In 3-card-match mode, it should be possible to get some (although a significantly lesser amount of) points for picking 3 cards of which only 2 match in some way. In that case, all 3 cards should be taken out of the game (even though only 2 match).');
INSERT INTO comments (isPublic, position, assignment, commentType, commentText) VALUES (1, 6, 2, 'REQUIRED_TASK', '3. In 3-card-match mode, choosing only 2 cards is never a match.');
INSERT INTO comments (isPublic, position, assignment, commentType, commentText) VALUES (1, 7, 2, 'REQUIRED_TASK', '4. Disable the game play mode control (i.e. the UISwitch or UISegmentedControl from Required Task 3) when a game starts (i.e. when the first flip of a game happens) and re-enable it when a re-deal happens (i.e. the Deal button is pressed).');
INSERT INTO comments (isPublic, position, assignment, commentType, commentText) VALUES (1, 8, 2, 'REQUIRED_TASK', '5. Add a text label somewhere which describes the results of the last consideration by the CardMatchingGame of a card choice by the user. Examples: “Matched J♥ J♠ for 4 points.” or “6♦ J♣ don’t match! 2 point penalty!” or “8♦” if only one card is chosen or even blank if no cards are chosen.');
INSERT INTO comments (isPublic, position, assignment, commentType, commentText) VALUES (1, 9, 2, 'REQUIRED_TASK', '5. Do not violate MVC by building UI in your Model. “UI” is anything you are going to present to the user.');
INSERT INTO comments (isPublic, position, assignment, commentType, commentText) VALUES (1, 10, 2, 'REQUIRED_TASK', '5. This must work properly in either mode of Required Task 3.');
INSERT INTO comments (isPublic, position, assignment, commentType, commentText) VALUES (1, 11, 2, 'REQUIRED_TASK', '7. Do not change the method signature of any public method we went over in lecture. It is fine to change private method signatures (though you should not need to) or to add public and/or private methods.');
INSERT INTO comments (isPublic, position, assignment, commentType, commentText) VALUES (1, 12, 2, 'EVALUATION', 'Project does not build.');
INSERT INTO comments (isPublic, position, assignment, commentType, commentText) VALUES (1, 13, 2, 'EVALUATION', 'Project does not build without warnings.');
INSERT INTO comments (isPublic, position, assignment, commentType, commentText) VALUES (1, 14, 2, 'EVALUATION', 'A fundamental concept was not understood.');
INSERT INTO comments (isPublic, position, assignment, commentType, commentText) VALUES (1, 15, 2, 'EVALUATION', 'Code is sloppy and hard to read (e.g. indentation is not consistent, etc.).');
INSERT INTO comments (isPublic, position, assignment, commentType, commentText) VALUES (1, 16, 2, 'EVALUATION', 'Your solution is difficult(or impossible) for someone reading the code to understand due to lack of comments, poor variable/method names, poor solution structure, poor use of whitespace, etc.');
INSERT INTO comments (isPublic, position, assignment, commentType, commentText) VALUES (1, 17, 2, 'EVALUATION', 'Solution violates MVC.');
INSERT INTO comments (isPublic, position, assignment, commentType, commentText) VALUES (1, 18, 2, 'EXTRA_CREDIT', '1. Add a UISlider to your UI which travels through the history of the results of the currently-being-played game’s card choices and display it to the user (moving the slider will modify the contents of the text label you created for Required Task 5 to show its state over the course of the game). When you are displaying past results, you probably want the text label to be grayed out or some such (take a look at the UIView method alpha and note that UISlider inherits from UIView) so it’s clear that it’s “the past.” And every time a new choice happens, you probably want to “jump to the present” in the slider. Implementing this extra credit item will require you to familiarize yourself with UISlider’s API and to add a data structure to your Controller to keep track of the history. It can be implemented in fewer than a dozen lines of code.');
INSERT INTO comments (isPublic, position, assignment, commentType, commentText) VALUES (1, 19, 2, 'EXTRA_CREDIT', '2. Change the image on the back of the cards (i.e. something other than a Stanford logo). Also, set the application and launch image icons for Matchismo. Try to get the resolutions right for each application icon and launch image. Let your creativity run wild when it comes to designing an icon!');